version: '3.8'

services:
  wordpress:
    build: .
    container_name: wordpress
    ports:
      - "8010:80"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003
    volumes:
      - ./wordpress:/var/www/html
      - ./php.ini:/usr/local/etc/php/php.ini
      - ./xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    depends_on:
      - db
      - mailhog
      - redis

  db:
    image: mysql:8.0
    container_name: wordpress_db
    restart: always
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: wordpress_phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - db

  mailhog:
    image: mailhog/mailhog
    container_name: wordpress_mailhog
    ports:
      - "8025:8025"

  redis:
    image: redis:alpine
    container_name: wordpress_redis
    restart: always

  wpcli:
    image: wordpress:cli
    container_name: wordpress_cli
    volumes:
      - ./wordpress:/var/www/html
    depends_on:
      - wordpress
      - db
    entrypoint: wp

  ngrok:
    image: wernight/ngrok
    container_name: wordpress_ngrok
    ports:
      - "4040:4040"
    environment:
      NGROK_PORT: wordpress:80
      NGROK_AUTH: ${NGROK_AUTH}
    depends_on:
      - wordpress

volumes:
  db_data:
